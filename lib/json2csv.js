// Generated by CoffeeScript 1.3.1
(function() {
  var checkFields, createColumnContent, createColumnTitles;

  exports.parse = function(params) {
    params.data = JSON.parse(JSON.stringify(params.data));
    if (checkFields(params)) {
      return createColumnTitles(params, createColumnContent);
    }
  };

  checkFields = function(params) {
    var found, key, name, value, _i, _len, _ref, _ref1;
    _ref = params.fields;
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      name = _ref[_i];
      found = false;
      _ref1 = params.data[0];
      for (key in _ref1) {
        value = _ref1[key];
        if (key === name) {
          found = true;
          break;
        }
      }
      if (found === false) {
        throw new Error("Cannot find " + name + " as a json key");
      } else {
        return true;
      }
    }
  };

  createColumnTitles = function(params, callback) {
    var elem, str, _i, _len, _ref;
    str = '';
    _ref = params.fields;
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      elem = _ref[_i];
      if (str !== '') {
        str += ',';
      }
      str += elem;
    }
    return callback(params, str);
  };

  createColumnContent = function(params, str) {
    var elem, field, line, _i, _j, _len, _len1, _ref, _ref1;
    _ref = params.data;
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      elem = _ref[_i];
      line = '';
      _ref1 = params.fields;
      for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {
        field = _ref1[_j];
        if (line !== '') {
          line += ',';
        }
        line += JSON.stringify(elem[field]);
      }
      line = line.replace(/\\"/g, '""');
      str += '\r\n' + line;
    }
    return str;
  };

}).call(this);
